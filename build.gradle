buildscript {
        repositories {
            jcenter()
        }

        dependencies {
            classpath 'com.android.tools.build:gradle:1.0.1'
        }
    }

    apply plugin: 'com.android.application'

    repositories {
        jcenter()
    }

    android {
        compileSdkVersion 21
        buildToolsVersion '21.0.0'

        defaultConfig {
            minSdkVersion 16
            targetSdkVersion 21
            versionCode 49
            versionName "0.7.7 beta"
//            ndk{
//                moduleName "ImageProcessing"
//                abiFilter "armeabi-v7a"
//                stl "gnustl_static"
//            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        dependencies {
            compile 'com.jakewharton:butterknife:6.1.0'
        }

        configurations {

            signingConfigs{
                debug {
                }

                release {

//                    def Properties props = new Properties()
//                    def propFile = new File('signing.properties')
//                    if (propFile.canRead()) {
//                        props.load(new FileInputStream(propFile))
//
//                        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
//                                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
//
//                            storeFile = file(props['STORE_FILE'])
//                            storePassword = props['STORE_PASSWORD']
//                            keyAlias = props['KEY_ALIAS']
//                            keyPassword = props['KEY_PASSWORD']
//                        } else {
//                            println 'signing.properties found but some entries are missing'
//                            signingConfig = null
//                        }
//                    } else {
//                        println 'signing.properties not found'
//                        signingConfig = null
//                    }
                }
            }


        }

        sourceSets {

            main {
                jni.srcDirs = []
                jniLibs.srcDir 'src/main/libs'
            }

        }




        task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
            def ndkDir = project.plugins.findPlugin('com.android.application').getNdkFolder()
            commandLine "$ndkDir/ndk-build",
                    'NDK_PROJECT_PATH=build/intermediates/ndk/debug',
                    'NDK_LIBS_OUT=src/main/jniLibs',
                    'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                    'NDK_APPLICATION_MK=src/main/jni/Application.mk'
        }

        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn ndkBuild
        }



        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
                signingConfig signingConfigs.release
            }
            debug {
                minifyEnabled false
                debuggable true
            }
        }


        dexOptions {
            incremental false
        }
    }